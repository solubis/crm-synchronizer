{
    "ddlObjects":[
        {
            "create":"CREATE TABLE IF NOT EXISTS  CHANGE_TRACKING (OBJECT_ID INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, RELATED_OBJECT_ID TEXT NOT NULL, TABLE_NAME NVARCHAR( 50 ) NOT NULL COLLATE 'NOCASE', CHANGE_TYPE SMALLINT NOT NULL, DATE DATETIME NOT NULL DEFAULT ( CURRENT_TIMESTAMP ));",
            "drop":"DROP TABLE IF EXISTS CHANGE_TRACKING;",
            "name":"CHANGE_TRACKING",
            "type":"TABLE"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [CONFIGURATION] (PARAMETER_NAME TEXT PRIMARY KEY NOT NULL, PARAMETER_VALUE TEXT NOT NULL);",
            "drop":"DROP TABLE IF EXISTS CONFIGURATION;",
            "name":"CONFIGURATION",
            "type":"TABLE"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [ORGANIZATION_SALES_TEMP] (ORGANIZATION_ID TEXT NOT NULL, PRODUCT_ID TEXT NOT NULL, YEAR INT NOT NULL, MONTH INTEGER NOT NULL, QUANTITY INTEGER NOT NULL, VALUE NUMERIC NOT NULL);",
            "drop":"DROP TABLE IF EXISTS ORGANIZATION_SALES_TEMP;",
            "name":"ORGANIZATION_SALES_TEMP",
            "type":"TABLE"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  IDX_ORGANIZATION_SALES_TEMP ON ORGANIZATION_SALES_TEMP (PRODUCT_ID, ORGANIZATION_ID );",
            "drop":"DROP INDEX IF EXISTS IDX_ORGANIZATION_SALES_TEMP;",
            "name":"IDX_ORGANIZATION_SALES_TEMP",
            "type":"INDEX"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [ADDRESS_ASSIGNATION] ( \"OBJECT_ID\"  TEXT NOT NULL, \"ADDRESS_ID\"  TEXT NOT NULL, \"RALETED_OBJECT_TYPE\"  integer NOT NULL, \"RELATED_OBJECT_ID\"  TEXT NOT NULL, \"CREATE_USER\"  nvarchar(100) COLLATE NOCASE, \"CREATE_DATE\"  datetime, \"CHANGE_USER\"  nvarchar(100) COLLATE NOCASE, \"CHANGE_DATE\"  datetime,    PRIMARY KEY ([OBJECT_ID]),    FOREIGN KEY ([ADDRESS_ID])        REFERENCES [ADDRESS]([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS ADDRESS_ASSIGNATION;",
            "name":"ADDRESS_ASSIGNATION",
            "type":"TABLE"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ADDRESS_ASSIGNATION_IDX_ADDRESS_ASSIGNATION_ADDRESS_ID]ON [ADDRESS_ASSIGNATION]([ADDRESS_ID]);",
            "drop":"DROP INDEX IF EXISTS ADDRESS_ASSIGNATION_IDX_ADDRESS_ASSIGNATION_ADDRESS_ID;",
            "name":"ADDRESS_ASSIGNATION_IDX_ADDRESS_ASSIGNATION_ADDRESS_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ADDRESS_ASSIGNATION_IDX_ADDRESS_ASSIGNATION_RALETED_OBJECT_TYPE]ON [ADDRESS_ASSIGNATION]([RALETED_OBJECT_TYPE]);",
            "drop":"DROP INDEX IF EXISTS ADDRESS_ASSIGNATION_IDX_ADDRESS_ASSIGNATION_RALETED_OBJECT_TYPE;",
            "name":"ADDRESS_ASSIGNATION_IDX_ADDRESS_ASSIGNATION_RALETED_OBJECT_TYPE",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ADDRESS_ASSIGNATION_IDX_ADDRESS_ASSIGNATION_RELATED_OBJECT_ID]ON [ADDRESS_ASSIGNATION]([RELATED_OBJECT_ID]);",
            "drop":"DROP INDEX IF EXISTS ADDRESS_ASSIGNATION_IDX_ADDRESS_ASSIGNATION_RELATED_OBJECT_ID;",
            "name":"ADDRESS_ASSIGNATION_IDX_ADDRESS_ASSIGNATION_RELATED_OBJECT_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_ADDRESS_ASSIGNATION_CHANGE_TRACKING] AFTER INSERT ON ADDRESS_ASSIGNATION WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'ADDRESS_ASSIGNATION' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_ADDRESS_ASSIGNATION_CHANGE_TRACKING;",
            "name":"TI_ADDRESS_ASSIGNATION_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_ADDRESS_ASSIGNATION_CHANGE_TRACKING] AFTER UPDATE ON ADDRESS_ASSIGNATION WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ADDRESS_ASSIGNATION' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_ADDRESS_ASSIGNATION_CHANGE_TRACKING;",
            "name":"TU_ADDRESS_ASSIGNATION_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_ADDRESS_ASSIGNATION_CHANGE_TRACKING] AFTER DELETE ON ADDRESS_ASSIGNATION WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ADDRESS_ASSIGNATION' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_ADDRESS_ASSIGNATION_CHANGE_TRACKING;",
            "name":"TD_ADDRESS_ASSIGNATION_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [COMMENT_TYPE] ( \"OBJECT_ID\"  TEXT NOT NULL, \"NAME\"  nvarchar(200) COLLATE NOCASE,    PRIMARY KEY ([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS COMMENT_TYPE;",
            "name":"COMMENT_TYPE",
            "type":"TABLE"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_COMMENT_TYPE_CHANGE_TRACKING] AFTER INSERT ON COMMENT_TYPE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'COMMENT_TYPE' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_COMMENT_TYPE_CHANGE_TRACKING;",
            "name":"TI_COMMENT_TYPE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_COMMENT_TYPE_CHANGE_TRACKING] AFTER UPDATE ON COMMENT_TYPE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'COMMENT_TYPE' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_COMMENT_TYPE_CHANGE_TRACKING;",
            "name":"TU_COMMENT_TYPE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_COMMENT_TYPE_CHANGE_TRACKING] AFTER DELETE ON COMMENT_TYPE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'COMMENT_TYPE' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_COMMENT_TYPE_CHANGE_TRACKING;",
            "name":"TD_COMMENT_TYPE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [COMMENT_ASSIGNATION] ( \"OBJECT_ID\"  TEXT NOT NULL, \"COMMENT_ID\"  TEXT NOT NULL, \"RELATED_OBJECT_ID\"  TEXT NOT NULL, \"RALETED_OBJECT_TYPE\"  integer NOT NULL, \"CREATE_USER\"  nvarchar(100) COLLATE NOCASE, \"CREATE_DATE\"  datetime, \"CHANGE_USER\"  nvarchar(100) COLLATE NOCASE, \"CHANGE_DATE\"  datetime,    PRIMARY KEY ([OBJECT_ID]),    FOREIGN KEY ([COMMENT_ID])        REFERENCES [COMMENT]([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS COMMENT_ASSIGNATION;",
            "name":"COMMENT_ASSIGNATION",
            "type":"TABLE"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [COMMENT_ASSIGNATION_IDX_COMMENT_ASSIGNATION_ADDRESS_ID]ON [COMMENT_ASSIGNATION]([COMMENT_ID]);",
            "drop":"DROP INDEX IF EXISTS COMMENT_ASSIGNATION_IDX_COMMENT_ASSIGNATION_ADDRESS_ID;",
            "name":"COMMENT_ASSIGNATION_IDX_COMMENT_ASSIGNATION_ADDRESS_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [COMMENT_ASSIGNATION_IDX_COMMENT_ASSIGNATION_RALETED_OBJECT_TYPE]ON [COMMENT_ASSIGNATION]([RALETED_OBJECT_TYPE]);",
            "drop":"DROP INDEX IF EXISTS COMMENT_ASSIGNATION_IDX_COMMENT_ASSIGNATION_RALETED_OBJECT_TYPE;",
            "name":"COMMENT_ASSIGNATION_IDX_COMMENT_ASSIGNATION_RALETED_OBJECT_TYPE",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [COMMENT_ASSIGNATION_IDX_COMMENT_ASSIGNATION_RELATED_OBJECT_ID]ON [COMMENT_ASSIGNATION]([RELATED_OBJECT_ID]);",
            "drop":"DROP INDEX IF EXISTS COMMENT_ASSIGNATION_IDX_COMMENT_ASSIGNATION_RELATED_OBJECT_ID;",
            "name":"COMMENT_ASSIGNATION_IDX_COMMENT_ASSIGNATION_RELATED_OBJECT_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_COMMENT_ASSIGNATION_CHANGE_TRACKING] AFTER INSERT ON COMMENT_ASSIGNATION WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'COMMENT_ASSIGNATION' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_COMMENT_ASSIGNATION_CHANGE_TRACKING;",
            "name":"TI_COMMENT_ASSIGNATION_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_COMMENT_ASSIGNATION_CHANGE_TRACKING] AFTER UPDATE ON COMMENT_ASSIGNATION WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'COMMENT_ASSIGNATION' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_COMMENT_ASSIGNATION_CHANGE_TRACKING;",
            "name":"TU_COMMENT_ASSIGNATION_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_COMMENT_ASSIGNATION_CHANGE_TRACKING] AFTER DELETE ON COMMENT_ASSIGNATION WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'COMMENT_ASSIGNATION' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_COMMENT_ASSIGNATION_CHANGE_TRACKING;",
            "name":"TD_COMMENT_ASSIGNATION_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [LOCATION_MOBILE] ( \"OBJECT_ID\"  TEXT NOT NULL, \"EMPLOYEE_ID\"  TEXT NOT NULL, \"ID\"  integer PRIMARY KEY AUTOINCREMENT NOT NULL, \"USER_NAME\"  nvarchar(100) NOT NULL COLLATE NOCASE, \"HOST_NAME\"  nvarchar(100) NOT NULL COLLATE NOCASE,    FOREIGN KEY ([EMPLOYEE_ID])        REFERENCES [EMPLOYEE]([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS LOCATION_MOBILE;",
            "name":"LOCATION_MOBILE",
            "type":"TABLE"
        },
        {
            "create":"CREATE UNIQUE INDEX IF NOT EXISTS  [LOCATION_MOBILE_AK_LOCATION_MOBILE_EMPLOYEE_OBJECT_ID]ON [LOCATION_MOBILE]([EMPLOYEE_ID]);",
            "drop":"DROP INDEX IF EXISTS LOCATION_MOBILE_AK_LOCATION_MOBILE_EMPLOYEE_OBJECT_ID;",
            "name":"LOCATION_MOBILE_AK_LOCATION_MOBILE_EMPLOYEE_OBJECT_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_LOCATION_MOBILE_CHANGE_TRACKING] AFTER INSERT ON LOCATION_MOBILE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'LOCATION_MOBILE' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_LOCATION_MOBILE_CHANGE_TRACKING;",
            "name":"TI_LOCATION_MOBILE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_LOCATION_MOBILE_CHANGE_TRACKING] AFTER UPDATE ON LOCATION_MOBILE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'LOCATION_MOBILE' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_LOCATION_MOBILE_CHANGE_TRACKING;",
            "name":"TU_LOCATION_MOBILE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_LOCATION_MOBILE_CHANGE_TRACKING] AFTER DELETE ON LOCATION_MOBILE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'LOCATION_MOBILE' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_LOCATION_MOBILE_CHANGE_TRACKING;",
            "name":"TD_LOCATION_MOBILE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [DOCUMENT_ASSIGNATION] ( \"OBJECT_ID\"  TEXT NOT NULL, \"DOCUMENT_ID\"  TEXT NOT NULL, \"RELATED_OBJECT_ID\"  TEXT NOT NULL, \"RALETED_OBJECT_TYPE\"  integer NOT NULL, \"CREATE_USER\"  nvarchar(100) COLLATE NOCASE, \"CREATE_DATE\"  datetime, \"CHANGE_USER\"  nvarchar(100) COLLATE NOCASE, \"CHANGE_DATE\"  datetime,    PRIMARY KEY ([OBJECT_ID]),    FOREIGN KEY ([DOCUMENT_ID])        REFERENCES [DOCUMENT]([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS DOCUMENT_ASSIGNATION;",
            "name":"DOCUMENT_ASSIGNATION",
            "type":"TABLE"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [DOCUMENT_ASSIGNATION_IDX_DOCUMENT_ASSIGNATION_ADDRESS_ID]ON [DOCUMENT_ASSIGNATION]([DOCUMENT_ID]);",
            "drop":"DROP INDEX IF EXISTS DOCUMENT_ASSIGNATION_IDX_DOCUMENT_ASSIGNATION_ADDRESS_ID;",
            "name":"DOCUMENT_ASSIGNATION_IDX_DOCUMENT_ASSIGNATION_ADDRESS_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [DOCUMENT_ASSIGNATION_IDX_DOCUMENT_ASSIGNATION_RALETED_OBJECT_TYPE]ON [DOCUMENT_ASSIGNATION]([RALETED_OBJECT_TYPE]);",
            "drop":"DROP INDEX IF EXISTS DOCUMENT_ASSIGNATION_IDX_DOCUMENT_ASSIGNATION_RALETED_OBJECT_TYPE;",
            "name":"DOCUMENT_ASSIGNATION_IDX_DOCUMENT_ASSIGNATION_RALETED_OBJECT_TYPE",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [DOCUMENT_ASSIGNATION_IDX_DOCUMENT_ASSIGNATION_RELATED_OBJECT_ID]ON [DOCUMENT_ASSIGNATION]([RELATED_OBJECT_ID]);",
            "drop":"DROP INDEX IF EXISTS DOCUMENT_ASSIGNATION_IDX_DOCUMENT_ASSIGNATION_RELATED_OBJECT_ID;",
            "name":"DOCUMENT_ASSIGNATION_IDX_DOCUMENT_ASSIGNATION_RELATED_OBJECT_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_DOCUMENT_ASSIGNATION_CHANGE_TRACKING] AFTER INSERT ON DOCUMENT_ASSIGNATION WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'DOCUMENT_ASSIGNATION' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_DOCUMENT_ASSIGNATION_CHANGE_TRACKING;",
            "name":"TI_DOCUMENT_ASSIGNATION_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_DOCUMENT_ASSIGNATION_CHANGE_TRACKING] AFTER UPDATE ON DOCUMENT_ASSIGNATION WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'DOCUMENT_ASSIGNATION' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_DOCUMENT_ASSIGNATION_CHANGE_TRACKING;",
            "name":"TU_DOCUMENT_ASSIGNATION_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_DOCUMENT_ASSIGNATION_CHANGE_TRACKING] AFTER DELETE ON DOCUMENT_ASSIGNATION WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'DOCUMENT_ASSIGNATION' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_DOCUMENT_ASSIGNATION_CHANGE_TRACKING;",
            "name":"TD_DOCUMENT_ASSIGNATION_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [PRODUCT_GROUP] ( \"OBJECT_ID\"  TEXT NOT NULL, \"NAME\"  nvarchar(200) COLLATE NOCASE, \"PRODUCT_GROUP_DIVISION_ID\"  TEXT NOT NULL,    PRIMARY KEY ([OBJECT_ID]),    FOREIGN KEY ([PRODUCT_GROUP_DIVISION_ID])        REFERENCES [PRODUCT_GROUP_DIVISION]([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS PRODUCT_GROUP;",
            "name":"PRODUCT_GROUP",
            "type":"TABLE"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [PRODUCT_GROUP_IDX_PRODUCT_GROUP_PRODUCT_GROUP_DIVISION_ID]ON [PRODUCT_GROUP]([PRODUCT_GROUP_DIVISION_ID]);",
            "drop":"DROP INDEX IF EXISTS PRODUCT_GROUP_IDX_PRODUCT_GROUP_PRODUCT_GROUP_DIVISION_ID;",
            "name":"PRODUCT_GROUP_IDX_PRODUCT_GROUP_PRODUCT_GROUP_DIVISION_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_PRODUCT_GROUP_CHANGE_TRACKING] AFTER INSERT ON PRODUCT_GROUP WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'PRODUCT_GROUP' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_PRODUCT_GROUP_CHANGE_TRACKING;",
            "name":"TI_PRODUCT_GROUP_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_PRODUCT_GROUP_CHANGE_TRACKING] AFTER UPDATE ON PRODUCT_GROUP WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'PRODUCT_GROUP' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_PRODUCT_GROUP_CHANGE_TRACKING;",
            "name":"TU_PRODUCT_GROUP_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_PRODUCT_GROUP_CHANGE_TRACKING] AFTER DELETE ON PRODUCT_GROUP WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'PRODUCT_GROUP' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_PRODUCT_GROUP_CHANGE_TRACKING;",
            "name":"TD_PRODUCT_GROUP_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [LOCATION_MOBILE_DATA_RANGE] ( \"OBJECT_ID\"  TEXT NOT NULL, \"LOCATION_MOBILE_ID\"  TEXT NOT NULL, \"EMPLOYEE_ID\"  TEXT NOT NULL, \"ACTIVITY_DATE\"  datetime NOT NULL,    PRIMARY KEY ([OBJECT_ID]),    FOREIGN KEY ([EMPLOYEE_ID])        REFERENCES [EMPLOYEE]([OBJECT_ID]),    FOREIGN KEY ([LOCATION_MOBILE_ID])        REFERENCES [LOCATION_MOBILE]([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS LOCATION_MOBILE_DATA_RANGE;",
            "name":"LOCATION_MOBILE_DATA_RANGE",
            "type":"TABLE"
        },
        {
            "create":"CREATE UNIQUE INDEX IF NOT EXISTS  [LOCATION_MOBILE_DATA_RANGE_AK_LOCATION_MOBILE_DATA_RANGE_EMPLOYEE_ID]ON [LOCATION_MOBILE_DATA_RANGE]([LOCATION_MOBILE_ID], [EMPLOYEE_ID]);",
            "drop":"DROP INDEX IF EXISTS LOCATION_MOBILE_DATA_RANGE_AK_LOCATION_MOBILE_DATA_RANGE_EMPLOYEE_ID;",
            "name":"LOCATION_MOBILE_DATA_RANGE_AK_LOCATION_MOBILE_DATA_RANGE_EMPLOYEE_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_LOCATION_MOBILE_DATA_RANGE_CHANGE_TRACKING] AFTER INSERT ON LOCATION_MOBILE_DATA_RANGE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'LOCATION_MOBILE_DATA_RANGE' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_LOCATION_MOBILE_DATA_RANGE_CHANGE_TRACKING;",
            "name":"TI_LOCATION_MOBILE_DATA_RANGE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_LOCATION_MOBILE_DATA_RANGE_CHANGE_TRACKING] AFTER UPDATE ON LOCATION_MOBILE_DATA_RANGE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'LOCATION_MOBILE_DATA_RANGE' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_LOCATION_MOBILE_DATA_RANGE_CHANGE_TRACKING;",
            "name":"TU_LOCATION_MOBILE_DATA_RANGE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_LOCATION_MOBILE_DATA_RANGE_CHANGE_TRACKING] AFTER DELETE ON LOCATION_MOBILE_DATA_RANGE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'LOCATION_MOBILE_DATA_RANGE' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_LOCATION_MOBILE_DATA_RANGE_CHANGE_TRACKING;",
            "name":"TD_LOCATION_MOBILE_DATA_RANGE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [CONTACT] ( \"OBJECT_ID\"  TEXT NOT NULL, \"VALUE\"  nvarchar(510) COLLATE NOCASE, \"COMMENT\"  nvarchar(2000) COLLATE NOCASE, \"CONTACT_TYPE_ID\"  TEXT NOT NULL, \"CREATE_USER\"  nvarchar(100) COLLATE NOCASE, \"CREATE_DATE\"  datetime, \"CHANGE_USER\"  nvarchar(100) COLLATE NOCASE, \"CHANGE_DATE\"  datetime, \"IS_REMINDER_CONTACT\"  smallint NOT NULL,    PRIMARY KEY ([OBJECT_ID]),    FOREIGN KEY ([CONTACT_TYPE_ID])        REFERENCES [CONTACT_TYPE]([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS CONTACT;",
            "name":"CONTACT",
            "type":"TABLE"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [CONTACT_IDX_CONTACT_CONTACT_TYPE_ID]ON [CONTACT]([CONTACT_TYPE_ID]);",
            "drop":"DROP INDEX IF EXISTS CONTACT_IDX_CONTACT_CONTACT_TYPE_ID;",
            "name":"CONTACT_IDX_CONTACT_CONTACT_TYPE_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_CONTACT_CHANGE_TRACKING] AFTER INSERT ON CONTACT WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'CONTACT' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_CONTACT_CHANGE_TRACKING;",
            "name":"TI_CONTACT_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_CONTACT_CHANGE_TRACKING] AFTER UPDATE ON CONTACT WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'CONTACT' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_CONTACT_CHANGE_TRACKING;",
            "name":"TU_CONTACT_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_CONTACT_CHANGE_TRACKING] AFTER DELETE ON CONTACT WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'CONTACT' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_CONTACT_CHANGE_TRACKING;",
            "name":"TD_CONTACT_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [ORGANIZATION_EMPLOYEE_FILTER] ( \"OBJECT_ID\"  TEXT NOT NULL, \"ORGANIZATION_EMPLOYEE_ID\"  TEXT NOT NULL, \"ORGANIZATION_ID\"  TEXT NOT NULL, \"EMPLOYEE_ID\"  TEXT NOT NULL,    PRIMARY KEY ([OBJECT_ID]),    FOREIGN KEY ([ORGANIZATION_EMPLOYEE_ID])        REFERENCES [ORGANIZATION_EMPLOYEE]([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS ORGANIZATION_EMPLOYEE_FILTER;",
            "name":"ORGANIZATION_EMPLOYEE_FILTER",
            "type":"TABLE"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ORGANIZATION_EMPLOYEE_FILTER_IDX_ORGANIZATION_EMPLOYEE_FILTER_EMPLOYEE_ID]ON [ORGANIZATION_EMPLOYEE_FILTER]([EMPLOYEE_ID]);",
            "drop":"DROP INDEX IF EXISTS ORGANIZATION_EMPLOYEE_FILTER_IDX_ORGANIZATION_EMPLOYEE_FILTER_EMPLOYEE_ID;",
            "name":"ORGANIZATION_EMPLOYEE_FILTER_IDX_ORGANIZATION_EMPLOYEE_FILTER_EMPLOYEE_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ORGANIZATION_EMPLOYEE_FILTER_IDX_ORGANIZATION_EMPLOYEE_FILTER_ORGANIZATION_EMPLOYEE_ID]ON [ORGANIZATION_EMPLOYEE_FILTER]([ORGANIZATION_EMPLOYEE_ID]);",
            "drop":"DROP INDEX IF EXISTS ORGANIZATION_EMPLOYEE_FILTER_IDX_ORGANIZATION_EMPLOYEE_FILTER_ORGANIZATION_EMPLOYEE_ID;",
            "name":"ORGANIZATION_EMPLOYEE_FILTER_IDX_ORGANIZATION_EMPLOYEE_FILTER_ORGANIZATION_EMPLOYEE_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ORGANIZATION_EMPLOYEE_FILTER_IDX_ORGANIZATION_EMPLOYEE_FILTER_ORGANIZATION_ID]ON [ORGANIZATION_EMPLOYEE_FILTER]([ORGANIZATION_ID]);",
            "drop":"DROP INDEX IF EXISTS ORGANIZATION_EMPLOYEE_FILTER_IDX_ORGANIZATION_EMPLOYEE_FILTER_ORGANIZATION_ID;",
            "name":"ORGANIZATION_EMPLOYEE_FILTER_IDX_ORGANIZATION_EMPLOYEE_FILTER_ORGANIZATION_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_ORGANIZATION_EMPLOYEE_FILTER_CHANGE_TRACKING] AFTER INSERT ON ORGANIZATION_EMPLOYEE_FILTER WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'ORGANIZATION_EMPLOYEE_FILTER' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_ORGANIZATION_EMPLOYEE_FILTER_CHANGE_TRACKING;",
            "name":"TI_ORGANIZATION_EMPLOYEE_FILTER_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_ORGANIZATION_EMPLOYEE_FILTER_CHANGE_TRACKING] AFTER UPDATE ON ORGANIZATION_EMPLOYEE_FILTER WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ORGANIZATION_EMPLOYEE_FILTER' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_ORGANIZATION_EMPLOYEE_FILTER_CHANGE_TRACKING;",
            "name":"TU_ORGANIZATION_EMPLOYEE_FILTER_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_ORGANIZATION_EMPLOYEE_FILTER_CHANGE_TRACKING] AFTER DELETE ON ORGANIZATION_EMPLOYEE_FILTER WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ORGANIZATION_EMPLOYEE_FILTER' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_ORGANIZATION_EMPLOYEE_FILTER_CHANGE_TRACKING;",
            "name":"TD_ORGANIZATION_EMPLOYEE_FILTER_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [ADDRESS] ( \"OBJECT_ID\"  TEXT NOT NULL, \"CITY\"  nvarchar(200) COLLATE NOCASE, \"POSTAL_CODE\"  nvarchar(40) COLLATE NOCASE, \"ADDRESS_LINE\"  nvarchar(510) COLLATE NOCASE, \"ADDRESS_TYPE_ID\"  TEXT NOT NULL, \"IS_MARKETING_ADDRESS\"  smallint NOT NULL, \"LATITUDE\"  numeric, \"LONGITUDE\"  numeric, \"CREATE_USER\"  nvarchar(100) COLLATE NOCASE, \"CREATE_DATE\"  datetime, \"CHANGE_USER\"  nvarchar(100) COLLATE NOCASE, \"CHANGE_DATE\"  datetime,    PRIMARY KEY ([OBJECT_ID]),    FOREIGN KEY ([ADDRESS_TYPE_ID])        REFERENCES [ADDRESS_TYPE]([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS ADDRESS;",
            "name":"ADDRESS",
            "type":"TABLE"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ADDRESS_IDX_ADDRESS_ADDRESS_TYPE_ID]ON [ADDRESS]([ADDRESS_TYPE_ID]);",
            "drop":"DROP INDEX IF EXISTS ADDRESS_IDX_ADDRESS_ADDRESS_TYPE_ID;",
            "name":"ADDRESS_IDX_ADDRESS_ADDRESS_TYPE_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_ADDRESS_CHANGE_TRACKING] AFTER INSERT ON ADDRESS WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'ADDRESS' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_ADDRESS_CHANGE_TRACKING;",
            "name":"TI_ADDRESS_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_ADDRESS_CHANGE_TRACKING] AFTER UPDATE ON ADDRESS WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ADDRESS' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_ADDRESS_CHANGE_TRACKING;",
            "name":"TU_ADDRESS_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_ADDRESS_CHANGE_TRACKING] AFTER DELETE ON ADDRESS WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ADDRESS' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_ADDRESS_CHANGE_TRACKING;",
            "name":"TD_ADDRESS_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [COMMENT] ( \"OBJECT_ID\"  TEXT NOT NULL, \"PRIORITY\"  smallint NOT NULL, \"TEXT\"  nvarchar(4000) COLLATE NOCASE, \"EMPLOYEE_ID\"  TEXT, \"COMMENT_TYPE_ID\"  TEXT NOT NULL, \"CREATE_USER\"  nvarchar(100) COLLATE NOCASE, \"CREATE_DATE\"  datetime, \"CHANGE_USER\"  nvarchar(100) COLLATE NOCASE, \"CHANGE_DATE\"  datetime, \"DATE\"  datetime NOT NULL,    PRIMARY KEY ([OBJECT_ID]),    FOREIGN KEY ([COMMENT_TYPE_ID])        REFERENCES [COMMENT_TYPE]([OBJECT_ID]),    FOREIGN KEY ([EMPLOYEE_ID])        REFERENCES [EMPLOYEE]([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS COMMENT;",
            "name":"COMMENT",
            "type":"TABLE"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [COMMENT_IDX_COMMENT_COMMENT_TYPE_ID]ON [COMMENT]([COMMENT_TYPE_ID]);",
            "drop":"DROP INDEX IF EXISTS COMMENT_IDX_COMMENT_COMMENT_TYPE_ID;",
            "name":"COMMENT_IDX_COMMENT_COMMENT_TYPE_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [COMMENT_IDX_COMMENT_EMPLOYEE_ID]ON [COMMENT]([EMPLOYEE_ID]);",
            "drop":"DROP INDEX IF EXISTS COMMENT_IDX_COMMENT_EMPLOYEE_ID;",
            "name":"COMMENT_IDX_COMMENT_EMPLOYEE_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_COMMENT_CHANGE_TRACKING] AFTER INSERT ON COMMENT WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'COMMENT' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_COMMENT_CHANGE_TRACKING;",
            "name":"TI_COMMENT_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_COMMENT_CHANGE_TRACKING] AFTER UPDATE ON COMMENT WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'COMMENT' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_COMMENT_CHANGE_TRACKING;",
            "name":"TU_COMMENT_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_COMMENT_CHANGE_TRACKING] AFTER DELETE ON COMMENT WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'COMMENT' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_COMMENT_CHANGE_TRACKING;",
            "name":"TD_COMMENT_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [ACTIVITY_EMPLOYEE_FILTER] ( \"OBJECT_ID\"  TEXT NOT NULL, \"ACTIVITY_EMPLOYEE_ID\"  TEXT NOT NULL, \"ACTIVITY_ID\"  TEXT NOT NULL, \"ACTIVITY_DATE\"  datetime NOT NULL, \"EMPLOYEE_ID\"  TEXT NOT NULL,    PRIMARY KEY ([OBJECT_ID]),    FOREIGN KEY ([ACTIVITY_EMPLOYEE_ID])        REFERENCES [ACTIVITY_EMPLOYEE]([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS ACTIVITY_EMPLOYEE_FILTER;",
            "name":"ACTIVITY_EMPLOYEE_FILTER",
            "type":"TABLE"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ACTIVITY_EMPLOYEE_FILTER_IDX_ACTIVITY_EMPLOYEE_FILTER_ACTIVITY_DATE]ON [ACTIVITY_EMPLOYEE_FILTER]([ACTIVITY_DATE]);",
            "drop":"DROP INDEX IF EXISTS ACTIVITY_EMPLOYEE_FILTER_IDX_ACTIVITY_EMPLOYEE_FILTER_ACTIVITY_DATE;",
            "name":"ACTIVITY_EMPLOYEE_FILTER_IDX_ACTIVITY_EMPLOYEE_FILTER_ACTIVITY_DATE",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ACTIVITY_EMPLOYEE_FILTER_IDX_ACTIVITY_EMPLOYEE_FILTER_ACTIVITY_EMPLOYEE_ID]ON [ACTIVITY_EMPLOYEE_FILTER]([ACTIVITY_EMPLOYEE_ID]);",
            "drop":"DROP INDEX IF EXISTS ACTIVITY_EMPLOYEE_FILTER_IDX_ACTIVITY_EMPLOYEE_FILTER_ACTIVITY_EMPLOYEE_ID;",
            "name":"ACTIVITY_EMPLOYEE_FILTER_IDX_ACTIVITY_EMPLOYEE_FILTER_ACTIVITY_EMPLOYEE_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ACTIVITY_EMPLOYEE_FILTER_IDX_ACTIVITY_EMPLOYEE_FILTER_ACTIVITY_ID]ON [ACTIVITY_EMPLOYEE_FILTER]([ACTIVITY_ID]);",
            "drop":"DROP INDEX IF EXISTS ACTIVITY_EMPLOYEE_FILTER_IDX_ACTIVITY_EMPLOYEE_FILTER_ACTIVITY_ID;",
            "name":"ACTIVITY_EMPLOYEE_FILTER_IDX_ACTIVITY_EMPLOYEE_FILTER_ACTIVITY_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ACTIVITY_EMPLOYEE_FILTER_IDX_ACTIVITY_EMPLOYEE_FILTER_EMPLOYEE_ID]ON [ACTIVITY_EMPLOYEE_FILTER]([EMPLOYEE_ID]);",
            "drop":"DROP INDEX IF EXISTS ACTIVITY_EMPLOYEE_FILTER_IDX_ACTIVITY_EMPLOYEE_FILTER_EMPLOYEE_ID;",
            "name":"ACTIVITY_EMPLOYEE_FILTER_IDX_ACTIVITY_EMPLOYEE_FILTER_EMPLOYEE_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_ACTIVITY_EMPLOYEE_FILTER_CHANGE_TRACKING] AFTER INSERT ON ACTIVITY_EMPLOYEE_FILTER WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'ACTIVITY_EMPLOYEE_FILTER' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_ACTIVITY_EMPLOYEE_FILTER_CHANGE_TRACKING;",
            "name":"TI_ACTIVITY_EMPLOYEE_FILTER_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_ACTIVITY_EMPLOYEE_FILTER_CHANGE_TRACKING] AFTER UPDATE ON ACTIVITY_EMPLOYEE_FILTER WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ACTIVITY_EMPLOYEE_FILTER' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_ACTIVITY_EMPLOYEE_FILTER_CHANGE_TRACKING;",
            "name":"TU_ACTIVITY_EMPLOYEE_FILTER_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_ACTIVITY_EMPLOYEE_FILTER_CHANGE_TRACKING] AFTER DELETE ON ACTIVITY_EMPLOYEE_FILTER WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ACTIVITY_EMPLOYEE_FILTER' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_ACTIVITY_EMPLOYEE_FILTER_CHANGE_TRACKING;",
            "name":"TD_ACTIVITY_EMPLOYEE_FILTER_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [DOCUMENT] ( \"OBJECT_ID\"  TEXT NOT NULL, \"FILENAME\"  nvarchar(256) NOT NULL COLLATE NOCASE, \"FILE_SIZE\"  integer NOT NULL, \"DESCRIPTION\"  nvarchar(2048) COLLATE NOCASE, \"EXTERNAL_URL\"  nvarchar(300) COLLATE NOCASE,    PRIMARY KEY ([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS DOCUMENT;",
            "name":"DOCUMENT",
            "type":"TABLE"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_DOCUMENT_CHANGE_TRACKING] AFTER INSERT ON DOCUMENT WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'DOCUMENT' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_DOCUMENT_CHANGE_TRACKING;",
            "name":"TI_DOCUMENT_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_DOCUMENT_CHANGE_TRACKING] AFTER UPDATE ON DOCUMENT WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'DOCUMENT' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_DOCUMENT_CHANGE_TRACKING;",
            "name":"TU_DOCUMENT_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_DOCUMENT_CHANGE_TRACKING] AFTER DELETE ON DOCUMENT WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'DOCUMENT' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_DOCUMENT_CHANGE_TRACKING;",
            "name":"TD_DOCUMENT_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [ORGANIZATION] ( \"OBJECT_ID\"  TEXT NOT NULL, \"OFFICIAL_NAME\"  nvarchar(200) COLLATE NOCASE, \"INTERNAL_NAME\"  nvarchar(200) COLLATE NOCASE, \"ADDITIONAL_NAME\"  nvarchar(200) COLLATE NOCASE, \"CODE\"  nvarchar(40) COLLATE NOCASE, \"RATING\"  nvarchar(20) COLLATE NOCASE, \"IMPORTANCE\"  nvarchar(20) COLLATE NOCASE, \"PENETRATION\"  nvarchar(20) COLLATE NOCASE, \"ORGANIZATION_TYPE_ID\"  TEXT NOT NULL, \"ORGANIZATION_STATUS_ID\"  TEXT NOT NULL, \"EMPLOYEE_COUNT\"  integer, \"CREATE_USER\"  nvarchar(100) COLLATE NOCASE, \"CREATE_DATE\"  datetime, \"CHANGE_USER\"  nvarchar(100) COLLATE NOCASE, \"CHANGE_DATE\"  datetime,    PRIMARY KEY ([OBJECT_ID]),    FOREIGN KEY ([ORGANIZATION_STATUS_ID])        REFERENCES [ORGANIZATION_STATUS]([OBJECT_ID]),    FOREIGN KEY ([ORGANIZATION_TYPE_ID])        REFERENCES [ORGANIZATION_TYPE]([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS ORGANIZATION;",
            "name":"ORGANIZATION",
            "type":"TABLE"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ORGANIZATION_IDX_ORGANIZATION_ORGANIZATION_STATUS_ID]ON [ORGANIZATION]([ORGANIZATION_STATUS_ID]);",
            "drop":"DROP INDEX IF EXISTS ORGANIZATION_IDX_ORGANIZATION_ORGANIZATION_STATUS_ID;",
            "name":"ORGANIZATION_IDX_ORGANIZATION_ORGANIZATION_STATUS_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ORGANIZATION_IDX_ORGANIZATION_ORGANIZATION_TYPE_ID]ON [ORGANIZATION]([ORGANIZATION_TYPE_ID]);",
            "drop":"DROP INDEX IF EXISTS ORGANIZATION_IDX_ORGANIZATION_ORGANIZATION_TYPE_ID;",
            "name":"ORGANIZATION_IDX_ORGANIZATION_ORGANIZATION_TYPE_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_ORGANIZATION_CHANGE_TRACKING] AFTER INSERT ON ORGANIZATION WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'ORGANIZATION' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_ORGANIZATION_CHANGE_TRACKING;",
            "name":"TI_ORGANIZATION_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_ORGANIZATION_CHANGE_TRACKING] AFTER UPDATE ON ORGANIZATION WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ORGANIZATION' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_ORGANIZATION_CHANGE_TRACKING;",
            "name":"TU_ORGANIZATION_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_ORGANIZATION_CHANGE_TRACKING] AFTER DELETE ON ORGANIZATION WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ORGANIZATION' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_ORGANIZATION_CHANGE_TRACKING;",
            "name":"TD_ORGANIZATION_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [CUSTOMER] ( \"OBJECT_ID\"  TEXT NOT NULL, \"FIRST_NAME\"  nvarchar(200) COLLATE NOCASE, \"LAST_NAME\"  nvarchar(200) COLLATE NOCASE, \"CODE\"  nvarchar(40) COLLATE NOCASE, \"GENDER\"  nvarchar(20) COLLATE NOCASE, \"MARITAL_STATUS\"  smallint, \"BIRTH_DATE\"  datetime, \"SPOUSE_NAME\"  nvarchar(200) COLLATE NOCASE, \"CHILDREN_AMOUNT\"  smallint, \"CHILDREN_NAMES\"  nvarchar(200) COLLATE NOCASE, \"IS_ACTIVE\"  smallint NOT NULL, \"IS_KOL\"  smallint, \"CREATE_USER\"  nvarchar(100) COLLATE NOCASE, \"CREATE_DATE\"  datetime, \"CHANGE_USER\"  nvarchar(100) COLLATE NOCASE, \"CHANGE_DATE\"  datetime,    PRIMARY KEY ([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS CUSTOMER;",
            "name":"CUSTOMER",
            "type":"TABLE"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_CUSTOMER_CHANGE_TRACKING] AFTER INSERT ON CUSTOMER WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'CUSTOMER' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_CUSTOMER_CHANGE_TRACKING;",
            "name":"TI_CUSTOMER_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_CUSTOMER_CHANGE_TRACKING] AFTER UPDATE ON CUSTOMER WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'CUSTOMER' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_CUSTOMER_CHANGE_TRACKING;",
            "name":"TU_CUSTOMER_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_CUSTOMER_CHANGE_TRACKING] AFTER DELETE ON CUSTOMER WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'CUSTOMER' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_CUSTOMER_CHANGE_TRACKING;",
            "name":"TD_CUSTOMER_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [ACTIVITY] ( \"OBJECT_ID\"  TEXT NOT NULL, \"SUBJECT\"  nvarchar(510) COLLATE NOCASE, \"VENUE\"  nvarchar(510) COLLATE NOCASE, \"START_DATE\"  datetime NOT NULL DEFAULT (CURRENT_TIMESTAMP), \"END_DATE\"  datetime NOT NULL DEFAULT (CURRENT_TIMESTAMP), \"ACTIVITY_TYPE_ID\"  TEXT NOT NULL, \"ACTIVITY_STATUS_ID\"  TEXT NOT NULL, \"ACTIVITY_PURPOSE_ID\"  TEXT, \"CREATE_USER\"  nvarchar(100) COLLATE NOCASE, \"CREATE_DATE\"  datetime, \"CHANGE_USER\"  nvarchar(100) COLLATE NOCASE, \"CHANGE_DATE\"  datetime,    PRIMARY KEY ([OBJECT_ID]),    FOREIGN KEY ([ACTIVITY_PURPOSE_ID])        REFERENCES [ACTIVITY_PURPOSE]([OBJECT_ID]),    FOREIGN KEY ([ACTIVITY_STATUS_ID])        REFERENCES [ACTIVITY_STATUS]([OBJECT_ID]),    FOREIGN KEY ([ACTIVITY_TYPE_ID])        REFERENCES [ACTIVITY_TYPE]([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS ACTIVITY;",
            "name":"ACTIVITY",
            "type":"TABLE"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ACTIVITY_IDX_ACTIVITY_ACTIVITY_PURPOSE_ID]ON [ACTIVITY]([ACTIVITY_PURPOSE_ID]);",
            "drop":"DROP INDEX IF EXISTS ACTIVITY_IDX_ACTIVITY_ACTIVITY_PURPOSE_ID;",
            "name":"ACTIVITY_IDX_ACTIVITY_ACTIVITY_PURPOSE_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ACTIVITY_IDX_ACTIVITY_ACTIVITY_STATUS_ID]ON [ACTIVITY]([ACTIVITY_STATUS_ID]);",
            "drop":"DROP INDEX IF EXISTS ACTIVITY_IDX_ACTIVITY_ACTIVITY_STATUS_ID;",
            "name":"ACTIVITY_IDX_ACTIVITY_ACTIVITY_STATUS_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ACTIVITY_IDX_ACTIVITY_ACTIVITY_TYPE_ID]ON [ACTIVITY]([ACTIVITY_TYPE_ID]);",
            "drop":"DROP INDEX IF EXISTS ACTIVITY_IDX_ACTIVITY_ACTIVITY_TYPE_ID;",
            "name":"ACTIVITY_IDX_ACTIVITY_ACTIVITY_TYPE_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ACTIVITY_IDX_ACTIVITY_START_DATE_END_DATE]ON [ACTIVITY]([START_DATE], [END_DATE]);",
            "drop":"DROP INDEX IF EXISTS ACTIVITY_IDX_ACTIVITY_START_DATE_END_DATE;",
            "name":"ACTIVITY_IDX_ACTIVITY_START_DATE_END_DATE",
            "type":"INDEX"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_ACTIVITY_CHANGE_TRACKING] AFTER INSERT ON ACTIVITY WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'ACTIVITY' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_ACTIVITY_CHANGE_TRACKING;",
            "name":"TI_ACTIVITY_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_ACTIVITY_CHANGE_TRACKING] AFTER UPDATE ON ACTIVITY WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ACTIVITY' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_ACTIVITY_CHANGE_TRACKING;",
            "name":"TU_ACTIVITY_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_ACTIVITY_CHANGE_TRACKING] AFTER DELETE ON ACTIVITY WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ACTIVITY' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_ACTIVITY_CHANGE_TRACKING;",
            "name":"TD_ACTIVITY_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [PRODUCT] ( \"OBJECT_ID\"  TEXT NOT NULL, \"NAME\"  nvarchar(200) COLLATE NOCASE, \"PICTURE\"  blob, \"IS_ACTIVE\"  smallint NOT NULL, \"IS_KEY_PRODUCT\"  smallint NOT NULL, \"POSITIONING\"  nvarchar(2000) COLLATE NOCASE, \"REASON_FOR_USE\"  nvarchar(1000) COLLATE NOCASE, \"EMPLOYEE_ID\"  TEXT, \"ADVANTAGES\"  nvarchar(1000) COLLATE NOCASE, \"DISADVANTAGES\"  nvarchar(1000) COLLATE NOCASE,    PRIMARY KEY ([OBJECT_ID]),    FOREIGN KEY ([EMPLOYEE_ID])        REFERENCES [EMPLOYEE]([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS PRODUCT;",
            "name":"PRODUCT",
            "type":"TABLE"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [PRODUCT_IDX_PRODUCT_EMPLOYEE_ID]ON [PRODUCT]([EMPLOYEE_ID]);",
            "drop":"DROP INDEX IF EXISTS PRODUCT_IDX_PRODUCT_EMPLOYEE_ID;",
            "name":"PRODUCT_IDX_PRODUCT_EMPLOYEE_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_PRODUCT_CHANGE_TRACKING] AFTER INSERT ON PRODUCT WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'PRODUCT' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_PRODUCT_CHANGE_TRACKING;",
            "name":"TI_PRODUCT_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_PRODUCT_CHANGE_TRACKING] AFTER UPDATE ON PRODUCT WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'PRODUCT' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_PRODUCT_CHANGE_TRACKING;",
            "name":"TU_PRODUCT_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_PRODUCT_CHANGE_TRACKING] AFTER DELETE ON PRODUCT WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'PRODUCT' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_PRODUCT_CHANGE_TRACKING;",
            "name":"TD_PRODUCT_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [ORGANIZATION_EMPLOYEE] ( \"OBJECT_ID\"  TEXT NOT NULL, \"ORGANIZATION_ID\"  TEXT NOT NULL, \"EMPLOYEE_ID\"  TEXT NOT NULL,    PRIMARY KEY ([OBJECT_ID]),    FOREIGN KEY ([EMPLOYEE_ID])        REFERENCES [EMPLOYEE]([OBJECT_ID]),    FOREIGN KEY ([ORGANIZATION_ID])        REFERENCES [ORGANIZATION]([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS ORGANIZATION_EMPLOYEE;",
            "name":"ORGANIZATION_EMPLOYEE",
            "type":"TABLE"
        },
        {
            "create":"CREATE UNIQUE INDEX IF NOT EXISTS  [ORGANIZATION_EMPLOYEE_AK_ORGANIZATION_EMPLOYEE_ORGANIZATION_ID_EMPLOYEE_ID]ON [ORGANIZATION_EMPLOYEE]([ORGANIZATION_ID], [EMPLOYEE_ID]);",
            "drop":"DROP INDEX IF EXISTS ORGANIZATION_EMPLOYEE_AK_ORGANIZATION_EMPLOYEE_ORGANIZATION_ID_EMPLOYEE_ID;",
            "name":"ORGANIZATION_EMPLOYEE_AK_ORGANIZATION_EMPLOYEE_ORGANIZATION_ID_EMPLOYEE_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ORGANIZATION_EMPLOYEE_IDX_ORGANIZATION_EMPLOYEE_EMPLOYEE_ID]ON [ORGANIZATION_EMPLOYEE]([EMPLOYEE_ID]);",
            "drop":"DROP INDEX IF EXISTS ORGANIZATION_EMPLOYEE_IDX_ORGANIZATION_EMPLOYEE_EMPLOYEE_ID;",
            "name":"ORGANIZATION_EMPLOYEE_IDX_ORGANIZATION_EMPLOYEE_EMPLOYEE_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ORGANIZATION_EMPLOYEE_IDX_ORGANIZATION_EMPLOYEE_ORGANIZATION_ID]ON [ORGANIZATION_EMPLOYEE]([ORGANIZATION_ID]);",
            "drop":"DROP INDEX IF EXISTS ORGANIZATION_EMPLOYEE_IDX_ORGANIZATION_EMPLOYEE_ORGANIZATION_ID;",
            "name":"ORGANIZATION_EMPLOYEE_IDX_ORGANIZATION_EMPLOYEE_ORGANIZATION_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_ORGANIZATION_EMPLOYEE_CHANGE_TRACKING] AFTER INSERT ON ORGANIZATION_EMPLOYEE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'ORGANIZATION_EMPLOYEE' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_ORGANIZATION_EMPLOYEE_CHANGE_TRACKING;",
            "name":"TI_ORGANIZATION_EMPLOYEE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_ORGANIZATION_EMPLOYEE_CHANGE_TRACKING] AFTER UPDATE ON ORGANIZATION_EMPLOYEE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ORGANIZATION_EMPLOYEE' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_ORGANIZATION_EMPLOYEE_CHANGE_TRACKING;",
            "name":"TU_ORGANIZATION_EMPLOYEE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_ORGANIZATION_EMPLOYEE_CHANGE_TRACKING] AFTER DELETE ON ORGANIZATION_EMPLOYEE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ORGANIZATION_EMPLOYEE' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_ORGANIZATION_EMPLOYEE_CHANGE_TRACKING;",
            "name":"TD_ORGANIZATION_EMPLOYEE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [ORGANIZATION_CUSTOMER] ( \"OBJECT_ID\"  TEXT NOT NULL, \"IS_MAIN_ORGANIZATION\"  smallint NOT NULL, \"CUSTOMER_ID\"  TEXT NOT NULL, \"CUSTOMER_IMPORTANCE_ID\"  TEXT NOT NULL, \"CUSTOMER_TYPE_ID\"  TEXT, \"CUSTOMER_POSITION_ID\"  TEXT, \"ORGANIZATION_ID\"  TEXT NOT NULL, \"CUSTOMER_STATUS_ID\"  TEXT, \"FULL_PART_TIME\"  integer, \"CREATE_USER\"  nvarchar(100) COLLATE NOCASE, \"CREATE_DATE\"  datetime, \"CHANGE_USER\"  nvarchar(100) COLLATE NOCASE, \"CHANGE_DATE\"  datetime,    PRIMARY KEY ([OBJECT_ID]),    FOREIGN KEY ([CUSTOMER_ID])        REFERENCES [CUSTOMER]([OBJECT_ID]),    FOREIGN KEY ([CUSTOMER_IMPORTANCE_ID])        REFERENCES [CUSTOMER_IMPORTANCE]([OBJECT_ID]),    FOREIGN KEY ([CUSTOMER_POSITION_ID])        REFERENCES [CUSTOMER_POSITION]([OBJECT_ID]),    FOREIGN KEY ([CUSTOMER_STATUS_ID])        REFERENCES [CUSTOMER_STATUS]([OBJECT_ID]),    FOREIGN KEY ([CUSTOMER_TYPE_ID])        REFERENCES [CUSTOMER_TYPE]([OBJECT_ID]),    FOREIGN KEY ([ORGANIZATION_ID])        REFERENCES [ORGANIZATION]([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS ORGANIZATION_CUSTOMER;",
            "name":"ORGANIZATION_CUSTOMER",
            "type":"TABLE"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ORGANIZATION_CUSTOMER_IDX_ORGANIZATION_CUSTOMER_CUSTOMER_ID]ON [ORGANIZATION_CUSTOMER]([CUSTOMER_ID]);",
            "drop":"DROP INDEX IF EXISTS ORGANIZATION_CUSTOMER_IDX_ORGANIZATION_CUSTOMER_CUSTOMER_ID;",
            "name":"ORGANIZATION_CUSTOMER_IDX_ORGANIZATION_CUSTOMER_CUSTOMER_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ORGANIZATION_CUSTOMER_IDX_ORGANIZATION_CUSTOMER_CUSTOMER_IMPORTANCE_ID]ON [ORGANIZATION_CUSTOMER]([CUSTOMER_IMPORTANCE_ID]);",
            "drop":"DROP INDEX IF EXISTS ORGANIZATION_CUSTOMER_IDX_ORGANIZATION_CUSTOMER_CUSTOMER_IMPORTANCE_ID;",
            "name":"ORGANIZATION_CUSTOMER_IDX_ORGANIZATION_CUSTOMER_CUSTOMER_IMPORTANCE_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ORGANIZATION_CUSTOMER_IDX_ORGANIZATION_CUSTOMER_CUSTOMER_POSITION_ID]ON [ORGANIZATION_CUSTOMER]([CUSTOMER_POSITION_ID]);",
            "drop":"DROP INDEX IF EXISTS ORGANIZATION_CUSTOMER_IDX_ORGANIZATION_CUSTOMER_CUSTOMER_POSITION_ID;",
            "name":"ORGANIZATION_CUSTOMER_IDX_ORGANIZATION_CUSTOMER_CUSTOMER_POSITION_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ORGANIZATION_CUSTOMER_IDX_ORGANIZATION_CUSTOMER_CUSTOMER_STATUS_ID]ON [ORGANIZATION_CUSTOMER]([CUSTOMER_STATUS_ID]);",
            "drop":"DROP INDEX IF EXISTS ORGANIZATION_CUSTOMER_IDX_ORGANIZATION_CUSTOMER_CUSTOMER_STATUS_ID;",
            "name":"ORGANIZATION_CUSTOMER_IDX_ORGANIZATION_CUSTOMER_CUSTOMER_STATUS_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ORGANIZATION_CUSTOMER_IDX_ORGANIZATION_CUSTOMER_CUSTOMER_TYPE_ID]ON [ORGANIZATION_CUSTOMER]([CUSTOMER_TYPE_ID]);",
            "drop":"DROP INDEX IF EXISTS ORGANIZATION_CUSTOMER_IDX_ORGANIZATION_CUSTOMER_CUSTOMER_TYPE_ID;",
            "name":"ORGANIZATION_CUSTOMER_IDX_ORGANIZATION_CUSTOMER_CUSTOMER_TYPE_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ORGANIZATION_CUSTOMER_IDX_ORGANIZATION_CUSTOMER_ORGANIZATION_ID]ON [ORGANIZATION_CUSTOMER]([ORGANIZATION_ID]);",
            "drop":"DROP INDEX IF EXISTS ORGANIZATION_CUSTOMER_IDX_ORGANIZATION_CUSTOMER_ORGANIZATION_ID;",
            "name":"ORGANIZATION_CUSTOMER_IDX_ORGANIZATION_CUSTOMER_ORGANIZATION_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_ORGANIZATION_CUSTOMER_CHANGE_TRACKING] AFTER INSERT ON ORGANIZATION_CUSTOMER WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'ORGANIZATION_CUSTOMER' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_ORGANIZATION_CUSTOMER_CHANGE_TRACKING;",
            "name":"TI_ORGANIZATION_CUSTOMER_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_ORGANIZATION_CUSTOMER_CHANGE_TRACKING] AFTER UPDATE ON ORGANIZATION_CUSTOMER WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ORGANIZATION_CUSTOMER' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_ORGANIZATION_CUSTOMER_CHANGE_TRACKING;",
            "name":"TU_ORGANIZATION_CUSTOMER_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_ORGANIZATION_CUSTOMER_CHANGE_TRACKING] AFTER DELETE ON ORGANIZATION_CUSTOMER WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ORGANIZATION_CUSTOMER' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_ORGANIZATION_CUSTOMER_CHANGE_TRACKING;",
            "name":"TD_ORGANIZATION_CUSTOMER_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [ACTIVITY_CUSTOMER] ( \"OBJECT_ID\"  TEXT NOT NULL, \"ACTIVITY_ID\"  TEXT NOT NULL, \"CUSTOMER_ID\"  TEXT NOT NULL, \"CREATE_USER\"  nvarchar(100) COLLATE NOCASE, \"CREATE_DATE\"  datetime, \"CHANGE_USER\"  nvarchar(100) COLLATE NOCASE, \"CHANGE_DATE\"  datetime,    PRIMARY KEY ([OBJECT_ID]),    FOREIGN KEY ([ACTIVITY_ID])        REFERENCES [ACTIVITY]([OBJECT_ID]),    FOREIGN KEY ([CUSTOMER_ID])        REFERENCES [CUSTOMER]([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS ACTIVITY_CUSTOMER;",
            "name":"ACTIVITY_CUSTOMER",
            "type":"TABLE"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ACTIVITY_CUSTOMER_IDX_ACTIVITY_CUSTOMER_ACTIVITY_ID]ON [ACTIVITY_CUSTOMER]([ACTIVITY_ID]);",
            "drop":"DROP INDEX IF EXISTS ACTIVITY_CUSTOMER_IDX_ACTIVITY_CUSTOMER_ACTIVITY_ID;",
            "name":"ACTIVITY_CUSTOMER_IDX_ACTIVITY_CUSTOMER_ACTIVITY_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ACTIVITY_CUSTOMER_IDX_ACTIVITY_CUSTOMER_CUSTOMER_ID]ON [ACTIVITY_CUSTOMER]([CUSTOMER_ID]);",
            "drop":"DROP INDEX IF EXISTS ACTIVITY_CUSTOMER_IDX_ACTIVITY_CUSTOMER_CUSTOMER_ID;",
            "name":"ACTIVITY_CUSTOMER_IDX_ACTIVITY_CUSTOMER_CUSTOMER_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_ACTIVITY_CUSTOMER_CHANGE_TRACKING] AFTER INSERT ON ACTIVITY_CUSTOMER WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'ACTIVITY_CUSTOMER' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_ACTIVITY_CUSTOMER_CHANGE_TRACKING;",
            "name":"TI_ACTIVITY_CUSTOMER_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_ACTIVITY_CUSTOMER_CHANGE_TRACKING] AFTER UPDATE ON ACTIVITY_CUSTOMER WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ACTIVITY_CUSTOMER' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_ACTIVITY_CUSTOMER_CHANGE_TRACKING;",
            "name":"TU_ACTIVITY_CUSTOMER_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_ACTIVITY_CUSTOMER_CHANGE_TRACKING] AFTER DELETE ON ACTIVITY_CUSTOMER WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ACTIVITY_CUSTOMER' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_ACTIVITY_CUSTOMER_CHANGE_TRACKING;",
            "name":"TD_ACTIVITY_CUSTOMER_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [ACTIVITY_PRODUCT] ( \"OBJECT_ID\"  TEXT NOT NULL, \"ACTIVITY_ID\"  TEXT NOT NULL, \"PRODUCT_ID\"  TEXT NOT NULL, \"SEQUENCE\"  integer, \"CREATE_USER\"  nvarchar(100) COLLATE NOCASE, \"CREATE_DATE\"  datetime, \"CHANGE_USER\"  nvarchar(100) COLLATE NOCASE, \"CHANGE_DATE\"  datetime,    PRIMARY KEY ([OBJECT_ID]),    FOREIGN KEY ([ACTIVITY_ID])        REFERENCES [ACTIVITY]([OBJECT_ID]),    FOREIGN KEY ([PRODUCT_ID])        REFERENCES [PRODUCT]([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS ACTIVITY_PRODUCT;",
            "name":"ACTIVITY_PRODUCT",
            "type":"TABLE"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ACTIVITY_PRODUCT_IDX_ACTIVITY_PRODUCT_ACTIVITY_ID]ON [ACTIVITY_PRODUCT]([ACTIVITY_ID]);",
            "drop":"DROP INDEX IF EXISTS ACTIVITY_PRODUCT_IDX_ACTIVITY_PRODUCT_ACTIVITY_ID;",
            "name":"ACTIVITY_PRODUCT_IDX_ACTIVITY_PRODUCT_ACTIVITY_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ACTIVITY_PRODUCT_IDX_ACTIVITY_PRODUCT_PRODUCT_ID]ON [ACTIVITY_PRODUCT]([PRODUCT_ID]);",
            "drop":"DROP INDEX IF EXISTS ACTIVITY_PRODUCT_IDX_ACTIVITY_PRODUCT_PRODUCT_ID;",
            "name":"ACTIVITY_PRODUCT_IDX_ACTIVITY_PRODUCT_PRODUCT_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_ACTIVITY_PRODUCT_CHANGE_TRACKING] AFTER INSERT ON ACTIVITY_PRODUCT WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'ACTIVITY_PRODUCT' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_ACTIVITY_PRODUCT_CHANGE_TRACKING;",
            "name":"TI_ACTIVITY_PRODUCT_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_ACTIVITY_PRODUCT_CHANGE_TRACKING] AFTER UPDATE ON ACTIVITY_PRODUCT WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ACTIVITY_PRODUCT' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_ACTIVITY_PRODUCT_CHANGE_TRACKING;",
            "name":"TU_ACTIVITY_PRODUCT_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_ACTIVITY_PRODUCT_CHANGE_TRACKING] AFTER DELETE ON ACTIVITY_PRODUCT WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ACTIVITY_PRODUCT' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_ACTIVITY_PRODUCT_CHANGE_TRACKING;",
            "name":"TD_ACTIVITY_PRODUCT_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [ACTIVITY_EMPLOYEE] ( \"OBJECT_ID\"  TEXT NOT NULL, \"ACTIVITY_ID\"  TEXT NOT NULL, \"ACTIVITY_ROLE_ID\"  TEXT NOT NULL, \"EMPLOYEE_ID\"  TEXT NOT NULL, \"CREATE_USER\"  nvarchar(100) COLLATE NOCASE, \"CREATE_DATE\"  datetime, \"CHANGE_USER\"  nvarchar(100) COLLATE NOCASE, \"CHANGE_DATE\"  datetime,    PRIMARY KEY ([OBJECT_ID]),    FOREIGN KEY ([ACTIVITY_ID])        REFERENCES [ACTIVITY]([OBJECT_ID]),    FOREIGN KEY ([ACTIVITY_ROLE_ID])        REFERENCES [ACTIVITY_ROLE]([OBJECT_ID]),    FOREIGN KEY ([EMPLOYEE_ID])        REFERENCES [EMPLOYEE]([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS ACTIVITY_EMPLOYEE;",
            "name":"ACTIVITY_EMPLOYEE",
            "type":"TABLE"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ACTIVITY_EMPLOYEE_IDX_ACTIVITY_EMPLOYEE_ACTIVITY_ID]ON [ACTIVITY_EMPLOYEE]([ACTIVITY_ID]);",
            "drop":"DROP INDEX IF EXISTS ACTIVITY_EMPLOYEE_IDX_ACTIVITY_EMPLOYEE_ACTIVITY_ID;",
            "name":"ACTIVITY_EMPLOYEE_IDX_ACTIVITY_EMPLOYEE_ACTIVITY_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ACTIVITY_EMPLOYEE_IDX_ACTIVITY_EMPLOYEE_ACTIVITY_ROLE_ID]ON [ACTIVITY_EMPLOYEE]([ACTIVITY_ROLE_ID]);",
            "drop":"DROP INDEX IF EXISTS ACTIVITY_EMPLOYEE_IDX_ACTIVITY_EMPLOYEE_ACTIVITY_ROLE_ID;",
            "name":"ACTIVITY_EMPLOYEE_IDX_ACTIVITY_EMPLOYEE_ACTIVITY_ROLE_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ACTIVITY_EMPLOYEE_IDX_ACTIVITY_EMPLOYEE_EMPLOYEE_ID]ON [ACTIVITY_EMPLOYEE]([EMPLOYEE_ID]);",
            "drop":"DROP INDEX IF EXISTS ACTIVITY_EMPLOYEE_IDX_ACTIVITY_EMPLOYEE_EMPLOYEE_ID;",
            "name":"ACTIVITY_EMPLOYEE_IDX_ACTIVITY_EMPLOYEE_EMPLOYEE_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_ACTIVITY_EMPLOYEE_CHANGE_TRACKING] AFTER INSERT ON ACTIVITY_EMPLOYEE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'ACTIVITY_EMPLOYEE' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_ACTIVITY_EMPLOYEE_CHANGE_TRACKING;",
            "name":"TI_ACTIVITY_EMPLOYEE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_ACTIVITY_EMPLOYEE_CHANGE_TRACKING] AFTER UPDATE ON ACTIVITY_EMPLOYEE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ACTIVITY_EMPLOYEE' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_ACTIVITY_EMPLOYEE_CHANGE_TRACKING;",
            "name":"TU_ACTIVITY_EMPLOYEE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_ACTIVITY_EMPLOYEE_CHANGE_TRACKING] AFTER DELETE ON ACTIVITY_EMPLOYEE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ACTIVITY_EMPLOYEE' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_ACTIVITY_EMPLOYEE_CHANGE_TRACKING;",
            "name":"TD_ACTIVITY_EMPLOYEE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [ACTIVITY_ORGANIZATION] ( \"OBJECT_ID\"  TEXT NOT NULL, \"ACTIVITY_ID\"  TEXT NOT NULL, \"ORGANIZATION_ID\"  TEXT NOT NULL, \"ACTIVITY_ORGANIZATION_TYPE_ID\"  TEXT, \"CREATE_USER\"  nvarchar(100) COLLATE NOCASE, \"CREATE_DATE\"  datetime, \"CHANGE_USER\"  nvarchar(100) COLLATE NOCASE, \"CHANGE_DATE\"  datetime,    PRIMARY KEY ([OBJECT_ID]),    FOREIGN KEY ([ACTIVITY_ID])        REFERENCES [ACTIVITY]([OBJECT_ID]),    FOREIGN KEY ([ORGANIZATION_ID])        REFERENCES [ORGANIZATION]([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS ACTIVITY_ORGANIZATION;",
            "name":"ACTIVITY_ORGANIZATION",
            "type":"TABLE"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ACTIVITY_ORGANIZATION_IDX_ACTIVITY_ORGANIZATION_ACTIVITY_ID]ON [ACTIVITY_ORGANIZATION]([ACTIVITY_ID]);",
            "drop":"DROP INDEX IF EXISTS ACTIVITY_ORGANIZATION_IDX_ACTIVITY_ORGANIZATION_ACTIVITY_ID;",
            "name":"ACTIVITY_ORGANIZATION_IDX_ACTIVITY_ORGANIZATION_ACTIVITY_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ACTIVITY_ORGANIZATION_IDX_ACTIVITY_ORGANIZATION_ACTIVITY_ORGANIZATION_TYPE_ID]ON [ACTIVITY_ORGANIZATION]([ACTIVITY_ORGANIZATION_TYPE_ID]);",
            "drop":"DROP INDEX IF EXISTS ACTIVITY_ORGANIZATION_IDX_ACTIVITY_ORGANIZATION_ACTIVITY_ORGANIZATION_TYPE_ID;",
            "name":"ACTIVITY_ORGANIZATION_IDX_ACTIVITY_ORGANIZATION_ACTIVITY_ORGANIZATION_TYPE_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ACTIVITY_ORGANIZATION_IDX_ACTIVITY_ORGANIZATION_ORGANIZATION_ID]ON [ACTIVITY_ORGANIZATION]([ORGANIZATION_ID]);",
            "drop":"DROP INDEX IF EXISTS ACTIVITY_ORGANIZATION_IDX_ACTIVITY_ORGANIZATION_ORGANIZATION_ID;",
            "name":"ACTIVITY_ORGANIZATION_IDX_ACTIVITY_ORGANIZATION_ORGANIZATION_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_ACTIVITY_ORGANIZATION_CHANGE_TRACKING] AFTER INSERT ON ACTIVITY_ORGANIZATION WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'ACTIVITY_ORGANIZATION' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_ACTIVITY_ORGANIZATION_CHANGE_TRACKING;",
            "name":"TI_ACTIVITY_ORGANIZATION_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_ACTIVITY_ORGANIZATION_CHANGE_TRACKING] AFTER UPDATE ON ACTIVITY_ORGANIZATION WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ACTIVITY_ORGANIZATION' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_ACTIVITY_ORGANIZATION_CHANGE_TRACKING;",
            "name":"TU_ACTIVITY_ORGANIZATION_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_ACTIVITY_ORGANIZATION_CHANGE_TRACKING] AFTER DELETE ON ACTIVITY_ORGANIZATION WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ACTIVITY_ORGANIZATION' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_ACTIVITY_ORGANIZATION_CHANGE_TRACKING;",
            "name":"TD_ACTIVITY_ORGANIZATION_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [PRODUCT_PRODUCT_GROUP] ( \"OBJECT_ID\"  TEXT NOT NULL, \"PRODUCT_GROUP_ID\"  TEXT NOT NULL, \"PRODUCT_ID\"  TEXT NOT NULL,    PRIMARY KEY ([OBJECT_ID]),    FOREIGN KEY ([PRODUCT_ID])        REFERENCES [PRODUCT]([OBJECT_ID]),    FOREIGN KEY ([PRODUCT_GROUP_ID])        REFERENCES [PRODUCT_GROUP]([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS PRODUCT_PRODUCT_GROUP;",
            "name":"PRODUCT_PRODUCT_GROUP",
            "type":"TABLE"
        },
        {
            "create":"CREATE UNIQUE INDEX IF NOT EXISTS  [PRODUCT_PRODUCT_GROUP_AK_PRODUCT_PRODUCT_GROUP_PRODUCT_ID]ON [PRODUCT_PRODUCT_GROUP]([PRODUCT_ID]);",
            "drop":"DROP INDEX IF EXISTS PRODUCT_PRODUCT_GROUP_AK_PRODUCT_PRODUCT_GROUP_PRODUCT_ID;",
            "name":"PRODUCT_PRODUCT_GROUP_AK_PRODUCT_PRODUCT_GROUP_PRODUCT_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE UNIQUE INDEX IF NOT EXISTS  [PRODUCT_PRODUCT_GROUP_AK_PRODUCT_PRODUCT_GROUP_PRODUCT_ID_GROUP_ID]ON [PRODUCT_PRODUCT_GROUP]([PRODUCT_GROUP_ID], [PRODUCT_ID]);",
            "drop":"DROP INDEX IF EXISTS PRODUCT_PRODUCT_GROUP_AK_PRODUCT_PRODUCT_GROUP_PRODUCT_ID_GROUP_ID;",
            "name":"PRODUCT_PRODUCT_GROUP_AK_PRODUCT_PRODUCT_GROUP_PRODUCT_ID_GROUP_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [PRODUCT_PRODUCT_GROUP_IDX_PRODUCT_PRODUCT_GROUP_PRODUCT_GROUP_ID]ON [PRODUCT_PRODUCT_GROUP]([PRODUCT_GROUP_ID]);",
            "drop":"DROP INDEX IF EXISTS PRODUCT_PRODUCT_GROUP_IDX_PRODUCT_PRODUCT_GROUP_PRODUCT_GROUP_ID;",
            "name":"PRODUCT_PRODUCT_GROUP_IDX_PRODUCT_PRODUCT_GROUP_PRODUCT_GROUP_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [PRODUCT_PRODUCT_GROUP_IDX_PRODUCT_PRODUCT_GROUP_PRODUCT_ID]ON [PRODUCT_PRODUCT_GROUP]([PRODUCT_ID]);",
            "drop":"DROP INDEX IF EXISTS PRODUCT_PRODUCT_GROUP_IDX_PRODUCT_PRODUCT_GROUP_PRODUCT_ID;",
            "name":"PRODUCT_PRODUCT_GROUP_IDX_PRODUCT_PRODUCT_GROUP_PRODUCT_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_PRODUCT_PRODUCT_GROUP_CHANGE_TRACKING] AFTER INSERT ON PRODUCT_PRODUCT_GROUP WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'PRODUCT_PRODUCT_GROUP' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_PRODUCT_PRODUCT_GROUP_CHANGE_TRACKING;",
            "name":"TI_PRODUCT_PRODUCT_GROUP_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_PRODUCT_PRODUCT_GROUP_CHANGE_TRACKING] AFTER UPDATE ON PRODUCT_PRODUCT_GROUP WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'PRODUCT_PRODUCT_GROUP' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_PRODUCT_PRODUCT_GROUP_CHANGE_TRACKING;",
            "name":"TU_PRODUCT_PRODUCT_GROUP_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_PRODUCT_PRODUCT_GROUP_CHANGE_TRACKING] AFTER DELETE ON PRODUCT_PRODUCT_GROUP WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'PRODUCT_PRODUCT_GROUP' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_PRODUCT_PRODUCT_GROUP_CHANGE_TRACKING;",
            "name":"TD_PRODUCT_PRODUCT_GROUP_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [ACTIVITY_TYPE_GROUP] ( \"OBJECT_ID\"  TEXT NOT NULL, \"NAME\"  nvarchar(200) COLLATE NOCASE,    PRIMARY KEY ([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS ACTIVITY_TYPE_GROUP;",
            "name":"ACTIVITY_TYPE_GROUP",
            "type":"TABLE"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_ACTIVITY_TYPE_GROUP_CHANGE_TRACKING] AFTER INSERT ON ACTIVITY_TYPE_GROUP WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'ACTIVITY_TYPE_GROUP' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_ACTIVITY_TYPE_GROUP_CHANGE_TRACKING;",
            "name":"TI_ACTIVITY_TYPE_GROUP_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_ACTIVITY_TYPE_GROUP_CHANGE_TRACKING] AFTER UPDATE ON ACTIVITY_TYPE_GROUP WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ACTIVITY_TYPE_GROUP' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_ACTIVITY_TYPE_GROUP_CHANGE_TRACKING;",
            "name":"TU_ACTIVITY_TYPE_GROUP_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_ACTIVITY_TYPE_GROUP_CHANGE_TRACKING] AFTER DELETE ON ACTIVITY_TYPE_GROUP WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ACTIVITY_TYPE_GROUP' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_ACTIVITY_TYPE_GROUP_CHANGE_TRACKING;",
            "name":"TD_ACTIVITY_TYPE_GROUP_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [ORGANIZATION_TYPE_GROUP] ( \"OBJECT_ID\"  TEXT NOT NULL, \"NAME\"  nvarchar(200) COLLATE NOCASE, \"DESCRIPTION\"  nvarchar(2000) COLLATE NOCASE,    PRIMARY KEY ([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS ORGANIZATION_TYPE_GROUP;",
            "name":"ORGANIZATION_TYPE_GROUP",
            "type":"TABLE"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_ORGANIZATION_TYPE_GROUP_CHANGE_TRACKING] AFTER INSERT ON ORGANIZATION_TYPE_GROUP WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'ORGANIZATION_TYPE_GROUP' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_ORGANIZATION_TYPE_GROUP_CHANGE_TRACKING;",
            "name":"TI_ORGANIZATION_TYPE_GROUP_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_ORGANIZATION_TYPE_GROUP_CHANGE_TRACKING] AFTER UPDATE ON ORGANIZATION_TYPE_GROUP WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ORGANIZATION_TYPE_GROUP' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_ORGANIZATION_TYPE_GROUP_CHANGE_TRACKING;",
            "name":"TU_ORGANIZATION_TYPE_GROUP_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_ORGANIZATION_TYPE_GROUP_CHANGE_TRACKING] AFTER DELETE ON ORGANIZATION_TYPE_GROUP WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ORGANIZATION_TYPE_GROUP' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_ORGANIZATION_TYPE_GROUP_CHANGE_TRACKING;",
            "name":"TD_ORGANIZATION_TYPE_GROUP_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [PRODUCT_GROUP_DIVISION] ( \"OBJECT_ID\"  TEXT NOT NULL, \"NAME\"  nvarchar(200) COLLATE NOCASE,    PRIMARY KEY ([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS PRODUCT_GROUP_DIVISION;",
            "name":"PRODUCT_GROUP_DIVISION",
            "type":"TABLE"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_PRODUCT_GROUP_DIVISION_CHANGE_TRACKING] AFTER INSERT ON PRODUCT_GROUP_DIVISION WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'PRODUCT_GROUP_DIVISION' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_PRODUCT_GROUP_DIVISION_CHANGE_TRACKING;",
            "name":"TI_PRODUCT_GROUP_DIVISION_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_PRODUCT_GROUP_DIVISION_CHANGE_TRACKING] AFTER UPDATE ON PRODUCT_GROUP_DIVISION WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'PRODUCT_GROUP_DIVISION' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_PRODUCT_GROUP_DIVISION_CHANGE_TRACKING;",
            "name":"TU_PRODUCT_GROUP_DIVISION_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_PRODUCT_GROUP_DIVISION_CHANGE_TRACKING] AFTER DELETE ON PRODUCT_GROUP_DIVISION WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'PRODUCT_GROUP_DIVISION' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_PRODUCT_GROUP_DIVISION_CHANGE_TRACKING;",
            "name":"TD_PRODUCT_GROUP_DIVISION_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [EMPLOYEE] ( \"OBJECT_ID\"  TEXT NOT NULL, \"USER_ID\"  TEXT, \"CODE\"  nvarchar(20) COLLATE NOCASE, \"FIRST_NAME\"  nvarchar(200) COLLATE NOCASE, \"LAST_NAME\"  nvarchar(200) COLLATE NOCASE, \"IS_ACTIVE\"  smallint NOT NULL, \"MIDDLE_INITIAL\"  nvarchar(20) COLLATE NOCASE, \"DEPARTMENT\"  nvarchar(70) COLLATE NOCASE,    PRIMARY KEY ([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS EMPLOYEE;",
            "name":"EMPLOYEE",
            "type":"TABLE"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [EMPLOYEE_IDX_EMPLOYEE_USER_ID]ON [EMPLOYEE]([USER_ID]);",
            "drop":"DROP INDEX IF EXISTS EMPLOYEE_IDX_EMPLOYEE_USER_ID;",
            "name":"EMPLOYEE_IDX_EMPLOYEE_USER_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_EMPLOYEE_CHANGE_TRACKING] AFTER INSERT ON EMPLOYEE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'EMPLOYEE' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_EMPLOYEE_CHANGE_TRACKING;",
            "name":"TI_EMPLOYEE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_EMPLOYEE_CHANGE_TRACKING] AFTER UPDATE ON EMPLOYEE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'EMPLOYEE' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_EMPLOYEE_CHANGE_TRACKING;",
            "name":"TU_EMPLOYEE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_EMPLOYEE_CHANGE_TRACKING] AFTER DELETE ON EMPLOYEE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'EMPLOYEE' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_EMPLOYEE_CHANGE_TRACKING;",
            "name":"TD_EMPLOYEE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [ACTIVITY_PURPOSE] ( \"OBJECT_ID\"  TEXT NOT NULL, \"NAME\"  nvarchar(200) COLLATE NOCASE, \"DESCRIPTION\"  nvarchar(2000) COLLATE NOCASE, \"ACTIVITY_TYPE_GROUP_ID\"  TEXT NOT NULL,    PRIMARY KEY ([OBJECT_ID]),    FOREIGN KEY ([ACTIVITY_TYPE_GROUP_ID])        REFERENCES [ACTIVITY_TYPE_GROUP]([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS ACTIVITY_PURPOSE;",
            "name":"ACTIVITY_PURPOSE",
            "type":"TABLE"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ACTIVITY_PURPOSE_IDX_ACTIVITY_PURPOSE_ACTIVITY_TYPE_GROUP_ID]ON [ACTIVITY_PURPOSE]([ACTIVITY_TYPE_GROUP_ID]);",
            "drop":"DROP INDEX IF EXISTS ACTIVITY_PURPOSE_IDX_ACTIVITY_PURPOSE_ACTIVITY_TYPE_GROUP_ID;",
            "name":"ACTIVITY_PURPOSE_IDX_ACTIVITY_PURPOSE_ACTIVITY_TYPE_GROUP_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_ACTIVITY_PURPOSE_CHANGE_TRACKING] AFTER INSERT ON ACTIVITY_PURPOSE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'ACTIVITY_PURPOSE' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_ACTIVITY_PURPOSE_CHANGE_TRACKING;",
            "name":"TI_ACTIVITY_PURPOSE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_ACTIVITY_PURPOSE_CHANGE_TRACKING] AFTER UPDATE ON ACTIVITY_PURPOSE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ACTIVITY_PURPOSE' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_ACTIVITY_PURPOSE_CHANGE_TRACKING;",
            "name":"TU_ACTIVITY_PURPOSE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_ACTIVITY_PURPOSE_CHANGE_TRACKING] AFTER DELETE ON ACTIVITY_PURPOSE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ACTIVITY_PURPOSE' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_ACTIVITY_PURPOSE_CHANGE_TRACKING;",
            "name":"TD_ACTIVITY_PURPOSE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [ACTIVITY_STATUS] ( \"OBJECT_ID\"  TEXT NOT NULL, \"NAME\"  nvarchar(200) COLLATE NOCASE, \"DESCRIPTION\"  nvarchar(2000) COLLATE NOCASE, \"ACTIVITY_STATUS_ID\"  TEXT, \"ACTIVITY_TYPE_GROUP_ID\"  TEXT,    PRIMARY KEY ([OBJECT_ID]),    FOREIGN KEY ([ACTIVITY_STATUS_ID])        REFERENCES [ACTIVITY_STATUS]([OBJECT_ID]),    FOREIGN KEY ([ACTIVITY_TYPE_GROUP_ID])        REFERENCES [ACTIVITY_TYPE_GROUP]([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS ACTIVITY_STATUS;",
            "name":"ACTIVITY_STATUS",
            "type":"TABLE"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ACTIVITY_STATUS_IDX_ACTIVITY_STATUS_ACTIVITY_STATUS_ID]ON [ACTIVITY_STATUS]([ACTIVITY_STATUS_ID]);",
            "drop":"DROP INDEX IF EXISTS ACTIVITY_STATUS_IDX_ACTIVITY_STATUS_ACTIVITY_STATUS_ID;",
            "name":"ACTIVITY_STATUS_IDX_ACTIVITY_STATUS_ACTIVITY_STATUS_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ACTIVITY_STATUS_IDX_ACTIVITY_STATUS_ACTIVITY_TYPE_GROUP_ID]ON [ACTIVITY_STATUS]([ACTIVITY_TYPE_GROUP_ID]);",
            "drop":"DROP INDEX IF EXISTS ACTIVITY_STATUS_IDX_ACTIVITY_STATUS_ACTIVITY_TYPE_GROUP_ID;",
            "name":"ACTIVITY_STATUS_IDX_ACTIVITY_STATUS_ACTIVITY_TYPE_GROUP_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_ACTIVITY_STATUS_CHANGE_TRACKING] AFTER INSERT ON ACTIVITY_STATUS WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'ACTIVITY_STATUS' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_ACTIVITY_STATUS_CHANGE_TRACKING;",
            "name":"TI_ACTIVITY_STATUS_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_ACTIVITY_STATUS_CHANGE_TRACKING] AFTER UPDATE ON ACTIVITY_STATUS WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ACTIVITY_STATUS' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_ACTIVITY_STATUS_CHANGE_TRACKING;",
            "name":"TU_ACTIVITY_STATUS_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_ACTIVITY_STATUS_CHANGE_TRACKING] AFTER DELETE ON ACTIVITY_STATUS WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ACTIVITY_STATUS' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_ACTIVITY_STATUS_CHANGE_TRACKING;",
            "name":"TD_ACTIVITY_STATUS_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [ACTIVITY_TYPE] ( \"OBJECT_ID\"  TEXT NOT NULL, \"NAME\"  nvarchar(200) COLLATE NOCASE, \"DESCRIPTION\"  nvarchar(2000) COLLATE NOCASE, \"ACTIVITY_TYPE_GROUP_ID\"  TEXT NOT NULL,    PRIMARY KEY ([OBJECT_ID]),    FOREIGN KEY ([ACTIVITY_TYPE_GROUP_ID])        REFERENCES [ACTIVITY_TYPE_GROUP]([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS ACTIVITY_TYPE;",
            "name":"ACTIVITY_TYPE",
            "type":"TABLE"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ACTIVITY_TYPE_IDX_ACTIVITY_TYPE_ACTIVITY_TYPE_GROUP_ID]ON [ACTIVITY_TYPE]([ACTIVITY_TYPE_GROUP_ID]);",
            "drop":"DROP INDEX IF EXISTS ACTIVITY_TYPE_IDX_ACTIVITY_TYPE_ACTIVITY_TYPE_GROUP_ID;",
            "name":"ACTIVITY_TYPE_IDX_ACTIVITY_TYPE_ACTIVITY_TYPE_GROUP_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_ACTIVITY_TYPE_CHANGE_TRACKING] AFTER INSERT ON ACTIVITY_TYPE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'ACTIVITY_TYPE' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_ACTIVITY_TYPE_CHANGE_TRACKING;",
            "name":"TI_ACTIVITY_TYPE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_ACTIVITY_TYPE_CHANGE_TRACKING] AFTER UPDATE ON ACTIVITY_TYPE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ACTIVITY_TYPE' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_ACTIVITY_TYPE_CHANGE_TRACKING;",
            "name":"TU_ACTIVITY_TYPE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_ACTIVITY_TYPE_CHANGE_TRACKING] AFTER DELETE ON ACTIVITY_TYPE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ACTIVITY_TYPE' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_ACTIVITY_TYPE_CHANGE_TRACKING;",
            "name":"TD_ACTIVITY_TYPE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [ACTIVITY_ROLE] ( \"OBJECT_ID\"  TEXT NOT NULL, \"NAME\"  nvarchar(200) COLLATE NOCASE, \"ACTIVITY_TYPE_GROUP_ID\"  TEXT NOT NULL,    PRIMARY KEY ([OBJECT_ID]),    FOREIGN KEY ([ACTIVITY_TYPE_GROUP_ID])        REFERENCES [ACTIVITY_TYPE_GROUP]([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS ACTIVITY_ROLE;",
            "name":"ACTIVITY_ROLE",
            "type":"TABLE"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ACTIVITY_ROLE_IDX_ACTIVITY_ROLE_ACTIVITY_TYPE_GROUP_ID]ON [ACTIVITY_ROLE]([ACTIVITY_TYPE_GROUP_ID]);",
            "drop":"DROP INDEX IF EXISTS ACTIVITY_ROLE_IDX_ACTIVITY_ROLE_ACTIVITY_TYPE_GROUP_ID;",
            "name":"ACTIVITY_ROLE_IDX_ACTIVITY_ROLE_ACTIVITY_TYPE_GROUP_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_ACTIVITY_ROLE_CHANGE_TRACKING] AFTER INSERT ON ACTIVITY_ROLE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'ACTIVITY_ROLE' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_ACTIVITY_ROLE_CHANGE_TRACKING;",
            "name":"TI_ACTIVITY_ROLE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_ACTIVITY_ROLE_CHANGE_TRACKING] AFTER UPDATE ON ACTIVITY_ROLE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ACTIVITY_ROLE' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_ACTIVITY_ROLE_CHANGE_TRACKING;",
            "name":"TU_ACTIVITY_ROLE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_ACTIVITY_ROLE_CHANGE_TRACKING] AFTER DELETE ON ACTIVITY_ROLE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ACTIVITY_ROLE' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_ACTIVITY_ROLE_CHANGE_TRACKING;",
            "name":"TD_ACTIVITY_ROLE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [ADDRESS_TYPE] ( \"OBJECT_ID\"  TEXT NOT NULL, \"NAME\"  nvarchar(200) COLLATE NOCASE,    PRIMARY KEY ([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS ADDRESS_TYPE;",
            "name":"ADDRESS_TYPE",
            "type":"TABLE"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_ADDRESS_TYPE_CHANGE_TRACKING] AFTER INSERT ON ADDRESS_TYPE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'ADDRESS_TYPE' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_ADDRESS_TYPE_CHANGE_TRACKING;",
            "name":"TI_ADDRESS_TYPE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_ADDRESS_TYPE_CHANGE_TRACKING] AFTER UPDATE ON ADDRESS_TYPE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ADDRESS_TYPE' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_ADDRESS_TYPE_CHANGE_TRACKING;",
            "name":"TU_ADDRESS_TYPE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_ADDRESS_TYPE_CHANGE_TRACKING] AFTER DELETE ON ADDRESS_TYPE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ADDRESS_TYPE' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_ADDRESS_TYPE_CHANGE_TRACKING;",
            "name":"TD_ADDRESS_TYPE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [CONTACT_TYPE] ( \"OBJECT_ID\"  TEXT NOT NULL, \"NAME\"  nvarchar(200) COLLATE NOCASE, \"DESCRIPTION\"  nvarchar(2000) COLLATE NOCASE, \"TYPE\"  smallint NOT NULL,    PRIMARY KEY ([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS CONTACT_TYPE;",
            "name":"CONTACT_TYPE",
            "type":"TABLE"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_CONTACT_TYPE_CHANGE_TRACKING] AFTER INSERT ON CONTACT_TYPE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'CONTACT_TYPE' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_CONTACT_TYPE_CHANGE_TRACKING;",
            "name":"TI_CONTACT_TYPE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_CONTACT_TYPE_CHANGE_TRACKING] AFTER UPDATE ON CONTACT_TYPE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'CONTACT_TYPE' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_CONTACT_TYPE_CHANGE_TRACKING;",
            "name":"TU_CONTACT_TYPE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_CONTACT_TYPE_CHANGE_TRACKING] AFTER DELETE ON CONTACT_TYPE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'CONTACT_TYPE' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_CONTACT_TYPE_CHANGE_TRACKING;",
            "name":"TD_CONTACT_TYPE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [CONTACT_ASSIGNATION] ( \"OBJECT_ID\"  TEXT NOT NULL, \"CONTACT_ID\"  TEXT NOT NULL, \"RELATED_OBJECT_ID\"  TEXT NOT NULL, \"RALETED_OBJECT_TYPE\"  integer NOT NULL, \"CREATE_USER\"  nvarchar(100) COLLATE NOCASE, \"CREATE_DATE\"  datetime, \"CHANGE_USER\"  nvarchar(100) COLLATE NOCASE, \"CHANGE_DATE\"  datetime,    PRIMARY KEY ([OBJECT_ID]),    FOREIGN KEY ([CONTACT_ID])        REFERENCES [CONTACT]([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS CONTACT_ASSIGNATION;",
            "name":"CONTACT_ASSIGNATION",
            "type":"TABLE"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [CONTACT_ASSIGNATION_IDX_COMMENT_ASSIGNATION_RELATED_OBJECT_ID]ON [CONTACT_ASSIGNATION]([RELATED_OBJECT_ID]);",
            "drop":"DROP INDEX IF EXISTS CONTACT_ASSIGNATION_IDX_COMMENT_ASSIGNATION_RELATED_OBJECT_ID;",
            "name":"CONTACT_ASSIGNATION_IDX_COMMENT_ASSIGNATION_RELATED_OBJECT_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [CONTACT_ASSIGNATION_IDX_CONTACT_ASSIGNATION_ADDRESS_ID]ON [CONTACT_ASSIGNATION]([CONTACT_ID]);",
            "drop":"DROP INDEX IF EXISTS CONTACT_ASSIGNATION_IDX_CONTACT_ASSIGNATION_ADDRESS_ID;",
            "name":"CONTACT_ASSIGNATION_IDX_CONTACT_ASSIGNATION_ADDRESS_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [CONTACT_ASSIGNATION_IDX_CONTACT_ASSIGNATION_RALETED_OBJECT_TYPE]ON [CONTACT_ASSIGNATION]([RALETED_OBJECT_TYPE]);",
            "drop":"DROP INDEX IF EXISTS CONTACT_ASSIGNATION_IDX_CONTACT_ASSIGNATION_RALETED_OBJECT_TYPE;",
            "name":"CONTACT_ASSIGNATION_IDX_CONTACT_ASSIGNATION_RALETED_OBJECT_TYPE",
            "type":"INDEX"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_CONTACT_ASSIGNATION_CHANGE_TRACKING] AFTER INSERT ON CONTACT_ASSIGNATION WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'CONTACT_ASSIGNATION' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_CONTACT_ASSIGNATION_CHANGE_TRACKING;",
            "name":"TI_CONTACT_ASSIGNATION_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_CONTACT_ASSIGNATION_CHANGE_TRACKING] AFTER UPDATE ON CONTACT_ASSIGNATION WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'CONTACT_ASSIGNATION' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_CONTACT_ASSIGNATION_CHANGE_TRACKING;",
            "name":"TU_CONTACT_ASSIGNATION_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_CONTACT_ASSIGNATION_CHANGE_TRACKING] AFTER DELETE ON CONTACT_ASSIGNATION WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'CONTACT_ASSIGNATION' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_CONTACT_ASSIGNATION_CHANGE_TRACKING;",
            "name":"TD_CONTACT_ASSIGNATION_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [CUSTOMER_IMPORTANCE] ( \"OBJECT_ID\"  TEXT NOT NULL, \"NAME\"  nvarchar(200) COLLATE NOCASE,    PRIMARY KEY ([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS CUSTOMER_IMPORTANCE;",
            "name":"CUSTOMER_IMPORTANCE",
            "type":"TABLE"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_CUSTOMER_IMPORTANCE_CHANGE_TRACKING] AFTER INSERT ON CUSTOMER_IMPORTANCE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'CUSTOMER_IMPORTANCE' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_CUSTOMER_IMPORTANCE_CHANGE_TRACKING;",
            "name":"TI_CUSTOMER_IMPORTANCE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_CUSTOMER_IMPORTANCE_CHANGE_TRACKING] AFTER UPDATE ON CUSTOMER_IMPORTANCE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'CUSTOMER_IMPORTANCE' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_CUSTOMER_IMPORTANCE_CHANGE_TRACKING;",
            "name":"TU_CUSTOMER_IMPORTANCE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_CUSTOMER_IMPORTANCE_CHANGE_TRACKING] AFTER DELETE ON CUSTOMER_IMPORTANCE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'CUSTOMER_IMPORTANCE' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_CUSTOMER_IMPORTANCE_CHANGE_TRACKING;",
            "name":"TD_CUSTOMER_IMPORTANCE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [CUSTOMER_POSITION] ( \"OBJECT_ID\"  TEXT NOT NULL, \"NAME\"  nvarchar(200) COLLATE NOCASE, \"DESCRIPTION\"  nvarchar(200) COLLATE NOCASE,    PRIMARY KEY ([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS CUSTOMER_POSITION;",
            "name":"CUSTOMER_POSITION",
            "type":"TABLE"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_CUSTOMER_POSITION_CHANGE_TRACKING] AFTER INSERT ON CUSTOMER_POSITION WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'CUSTOMER_POSITION' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_CUSTOMER_POSITION_CHANGE_TRACKING;",
            "name":"TI_CUSTOMER_POSITION_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_CUSTOMER_POSITION_CHANGE_TRACKING] AFTER UPDATE ON CUSTOMER_POSITION WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'CUSTOMER_POSITION' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_CUSTOMER_POSITION_CHANGE_TRACKING;",
            "name":"TU_CUSTOMER_POSITION_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_CUSTOMER_POSITION_CHANGE_TRACKING] AFTER DELETE ON CUSTOMER_POSITION WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'CUSTOMER_POSITION' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_CUSTOMER_POSITION_CHANGE_TRACKING;",
            "name":"TD_CUSTOMER_POSITION_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [CUSTOMER_STATUS] ( \"OBJECT_ID\"  TEXT NOT NULL, \"NAME\"  nvarchar(200) COLLATE NOCASE,    PRIMARY KEY ([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS CUSTOMER_STATUS;",
            "name":"CUSTOMER_STATUS",
            "type":"TABLE"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_CUSTOMER_STATUS_CHANGE_TRACKING] AFTER INSERT ON CUSTOMER_STATUS WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'CUSTOMER_STATUS' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_CUSTOMER_STATUS_CHANGE_TRACKING;",
            "name":"TI_CUSTOMER_STATUS_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_CUSTOMER_STATUS_CHANGE_TRACKING] AFTER UPDATE ON CUSTOMER_STATUS WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'CUSTOMER_STATUS' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_CUSTOMER_STATUS_CHANGE_TRACKING;",
            "name":"TU_CUSTOMER_STATUS_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_CUSTOMER_STATUS_CHANGE_TRACKING] AFTER DELETE ON CUSTOMER_STATUS WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'CUSTOMER_STATUS' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_CUSTOMER_STATUS_CHANGE_TRACKING;",
            "name":"TD_CUSTOMER_STATUS_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [CUSTOMER_TYPE] ( \"OBJECT_ID\"  TEXT NOT NULL, \"NAME\"  nvarchar(200) COLLATE NOCASE, \"DESCRIPTION\"  nvarchar(2000) COLLATE NOCASE,    PRIMARY KEY ([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS CUSTOMER_TYPE;",
            "name":"CUSTOMER_TYPE",
            "type":"TABLE"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_CUSTOMER_TYPE_CHANGE_TRACKING] AFTER INSERT ON CUSTOMER_TYPE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'CUSTOMER_TYPE' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_CUSTOMER_TYPE_CHANGE_TRACKING;",
            "name":"TI_CUSTOMER_TYPE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_CUSTOMER_TYPE_CHANGE_TRACKING] AFTER UPDATE ON CUSTOMER_TYPE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'CUSTOMER_TYPE' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_CUSTOMER_TYPE_CHANGE_TRACKING;",
            "name":"TU_CUSTOMER_TYPE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_CUSTOMER_TYPE_CHANGE_TRACKING] AFTER DELETE ON CUSTOMER_TYPE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'CUSTOMER_TYPE' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_CUSTOMER_TYPE_CHANGE_TRACKING;",
            "name":"TD_CUSTOMER_TYPE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [ORGANIZATION_TYPE] ( \"OBJECT_ID\"  TEXT NOT NULL, \"NAME\"  nvarchar(200) COLLATE NOCASE, \"DESCRIPTION\"  nvarchar(2000) COLLATE NOCASE, \"ORGANIZATION_TYPE_GROUP_ID\"  TEXT NOT NULL,    PRIMARY KEY ([OBJECT_ID]),    FOREIGN KEY ([ORGANIZATION_TYPE_GROUP_ID])        REFERENCES [ORGANIZATION_TYPE_GROUP]([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS ORGANIZATION_TYPE;",
            "name":"ORGANIZATION_TYPE",
            "type":"TABLE"
        },
        {
            "create":"CREATE INDEX IF NOT EXISTS  [ORGANIZATION_TYPE_IDX_ORGANIZATION_TYPE_ORGANIZATION_TYPE_GROUP_ID]ON [ORGANIZATION_TYPE]([ORGANIZATION_TYPE_GROUP_ID]);",
            "drop":"DROP INDEX IF EXISTS ORGANIZATION_TYPE_IDX_ORGANIZATION_TYPE_ORGANIZATION_TYPE_GROUP_ID;",
            "name":"ORGANIZATION_TYPE_IDX_ORGANIZATION_TYPE_ORGANIZATION_TYPE_GROUP_ID",
            "type":"INDEX"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_ORGANIZATION_TYPE_CHANGE_TRACKING] AFTER INSERT ON ORGANIZATION_TYPE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'ORGANIZATION_TYPE' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_ORGANIZATION_TYPE_CHANGE_TRACKING;",
            "name":"TI_ORGANIZATION_TYPE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_ORGANIZATION_TYPE_CHANGE_TRACKING] AFTER UPDATE ON ORGANIZATION_TYPE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ORGANIZATION_TYPE' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_ORGANIZATION_TYPE_CHANGE_TRACKING;",
            "name":"TU_ORGANIZATION_TYPE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_ORGANIZATION_TYPE_CHANGE_TRACKING] AFTER DELETE ON ORGANIZATION_TYPE WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ORGANIZATION_TYPE' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_ORGANIZATION_TYPE_CHANGE_TRACKING;",
            "name":"TD_ORGANIZATION_TYPE_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TABLE IF NOT EXISTS  [ORGANIZATION_STATUS] ( \"OBJECT_ID\"  TEXT NOT NULL, \"NAME\"  nvarchar(200) COLLATE NOCASE, \"DESCRIPTION\"  nvarchar(2000) COLLATE NOCASE, \"IS_ACTIVE\"  smallint NOT NULL,    PRIMARY KEY ([OBJECT_ID]));",
            "drop":"DROP TABLE IF EXISTS ORGANIZATION_STATUS;",
            "name":"ORGANIZATION_STATUS",
            "type":"TABLE"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TI_ORGANIZATION_STATUS_CHANGE_TRACKING] AFTER INSERT ON ORGANIZATION_STATUS WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN     INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT NEW.OBJECT_ID, 'ORGANIZATION_STATUS' AS [TABLE_NAME], 1 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TI_ORGANIZATION_STATUS_CHANGE_TRACKING;",
            "name":"TI_ORGANIZATION_STATUS_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TU_ORGANIZATION_STATUS_CHANGE_TRACKING] AFTER UPDATE ON ORGANIZATION_STATUS WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ORGANIZATION_STATUS' AS [TABLE_NAME], 2 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TU_ORGANIZATION_STATUS_CHANGE_TRACKING;",
            "name":"TU_ORGANIZATION_STATUS_CHANGE_TRACKING",
            "type":"TRIGGER"
        },
        {
            "create":"CREATE TRIGGER IF NOT EXISTS  [TD_ORGANIZATION_STATUS_CHANGE_TRACKING] AFTER DELETE ON ORGANIZATION_STATUS WHEN (SELECT DISTINCT PARAMETER_VALUE FROM CONFIGURATION WHERE PARAMETER_NAME = 'TRIGGERS_ENABLE' LIMIT 1)='TRUE' BEGIN    INSERT INTO CHANGE_TRACKING (RELATED_OBJECT_ID, TABLE_NAME, CHANGE_TYPE)    SELECT OLD.OBJECT_ID, 'ORGANIZATION_STATUS' AS [TABLE_NAME], 4 AS [CHANGE_TYPE]; END;",
            "drop":"DROP TRIGGER IF EXISTS TD_ORGANIZATION_STATUS_CHANGE_TRACKING;",
            "name":"TD_ORGANIZATION_STATUS_CHANGE_TRACKING",
            "type":"TRIGGER"
        }
    ]
};
 